/home/myroslav/reserv/reserv/local/lib/python2.7/site-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 12:34:29,081: WARNING/MainProcess] /home/myroslav/reserv/reserv/local/lib/python2.7/site-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 12:34:29,120: INFO/Beat] beat: Starting...
[2016-03-20 12:34:29,824: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 2.00 seconds...

[2016-03-20 12:34:30,439: ERROR/Beat] beat: Connection error: . Trying again in 2.0 seconds...
[2016-03-20 12:34:31,832: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 4.00 seconds...

[2016-03-20 12:34:32,448: ERROR/Beat] beat: Connection error: . Trying again in 4.0 seconds...
[2016-03-20 12:34:35,842: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 6.00 seconds...

[2016-03-20 12:34:36,458: ERROR/Beat] beat: Connection error: . Trying again in 6.0 seconds...
[2016-03-20 12:34:41,859: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 8.00 seconds...

[2016-03-20 12:34:42,472: ERROR/Beat] beat: Connection error: . Trying again in 8.0 seconds...
[2016-03-20 12:34:49,872: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 10.00 seconds...

[2016-03-20 12:34:50,486: ERROR/Beat] beat: Connection error: . Trying again in 10.0 seconds...
[2016-03-20 12:34:59,891: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 12.00 seconds...

[2016-03-20 12:35:00,506: ERROR/Beat] beat: Connection error: . Trying again in 12.0 seconds...
[2016-03-20 12:35:11,905: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 14.00 seconds...

[2016-03-20 12:35:12,521: ERROR/Beat] beat: Connection error: . Trying again in 14.0 seconds...
[2016-03-20 12:35:25,923: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 16.00 seconds...

[2016-03-20 12:35:26,540: ERROR/Beat] beat: Connection error: . Trying again in 16.0 seconds...
[2016-03-20 12:35:41,944: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 18.00 seconds...

[2016-03-20 12:35:42,564: ERROR/Beat] beat: Connection error: . Trying again in 18.0 seconds...
[2016-03-20 12:35:59,980: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 20.00 seconds...

[2016-03-20 12:36:00,589: ERROR/Beat] beat: Connection error: . Trying again in 20.0 seconds...
[2016-03-20 12:36:20,011: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 22.00 seconds...

[2016-03-20 12:36:20,615: ERROR/Beat] beat: Connection error: . Trying again in 22.0 seconds...
[2016-03-20 12:36:42,038: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 24.00 seconds...

[2016-03-20 12:36:42,641: ERROR/Beat] beat: Connection error: . Trying again in 24.0 seconds...
[2016-03-20 12:37:06,073: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 26.00 seconds...

[2016-03-20 12:37:06,671: ERROR/Beat] beat: Connection error: . Trying again in 26.0 seconds...
[2016-03-20 12:37:32,103: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 28.00 seconds...

[2016-03-20 12:37:32,699: ERROR/Beat] beat: Connection error: . Trying again in 28.0 seconds...
[2016-03-20 12:38:00,137: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 30.00 seconds...

[2016-03-20 12:38:00,734: ERROR/Beat] beat: Connection error: . Trying again in 30.0 seconds...
[2016-03-20 12:38:30,172: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 32.00 seconds...

[2016-03-20 12:38:30,767: ERROR/Beat] beat: Connection error: . Trying again in 32.0 seconds...
[2016-03-20 12:39:02,213: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 32.00 seconds...

[2016-03-20 12:39:02,799: ERROR/Beat] beat: Connection error: . Trying again in 32.0 seconds...
[2016-03-20 12:39:34,258: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 32.00 seconds...

[2016-03-20 12:39:34,846: ERROR/Beat] beat: Connection error: . Trying again in 32.0 seconds...
[2016-03-20 12:40:06,294: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 32.00 seconds...

[2016-03-20 12:40:06,879: ERROR/Beat] beat: Connection error: . Trying again in 32.0 seconds...
[2016-03-20 12:40:38,334: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 32.00 seconds...

[2016-03-20 12:40:38,920: ERROR/Beat] beat: Connection error: . Trying again in 32.0 seconds...
[2016-03-20 12:41:10,371: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 32.00 seconds...

[2016-03-20 12:41:10,967: ERROR/Beat] beat: Connection error: . Trying again in 32.0 seconds...

worker: Warm shutdown (MainProcess)
[2016-03-20 12:41:31,532: INFO/MainProcess] beat: Shutting down...
 
 -------------- celery@main_worker v3.1.20 (Cipater)
---- **** ----- 
--- * ***  * -- Linux-3.19.0-33-generic-x86_64-with-Ubuntu-14.04-trusty
-- * - **** --- 
- ** ---------- [config]
- ** ---------- .> app:         default:0x7fa984a97810 (djcelery.loaders.DjangoLoader)
- ** ---------- .> transport:   redis://redis:6379//
- ** ---------- .> results:     database
- *** --- * --- .> concurrency: 4 (prefork)
-- ******* ---- 
--- ***** ----- [queues]
 -------------- .> celery           exchange=celery(direct) key=celery
                

[tasks]


/home/myroslav/reserv/reserv/local/lib/python2.7/site-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 12:41:54,002: WARNING/MainProcess] /home/myroslav/reserv/reserv/local/lib/python2.7/site-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 12:41:54,011: INFO/Beat] beat: Starting...
[2016-03-20 12:41:54,121: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 2.00 seconds...

[2016-03-20 12:41:54,439: ERROR/Beat] beat: Connection error: . Trying again in 2.0 seconds...
[2016-03-20 12:41:56,130: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 4.00 seconds...

[2016-03-20 12:41:56,447: ERROR/Beat] beat: Connection error: . Trying again in 4.0 seconds...
[2016-03-20 12:42:00,149: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 6.00 seconds...

[2016-03-20 12:42:00,458: ERROR/Beat] beat: Connection error: . Trying again in 6.0 seconds...
[2016-03-20 12:42:06,159: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 8.00 seconds...

[2016-03-20 12:42:06,473: ERROR/Beat] beat: Connection error: . Trying again in 8.0 seconds...
[2016-03-20 12:42:14,173: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 10.00 seconds...

[2016-03-20 12:42:14,488: ERROR/Beat] beat: Connection error: . Trying again in 10.0 seconds...
[2016-03-20 12:42:24,194: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 12.00 seconds...

[2016-03-20 12:42:29,517: ERROR/Beat] beat: Connection error: . Trying again in 12.0 seconds...
[2016-03-20 12:42:36,224: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 14.00 seconds...

[2016-03-20 12:42:41,540: ERROR/Beat] beat: Connection error: . Trying again in 14.0 seconds...
[2016-03-20 12:42:55,255: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 16.00 seconds...

[2016-03-20 12:42:55,566: ERROR/Beat] beat: Connection error: . Trying again in 16.0 seconds...
[2016-03-20 12:43:11,282: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 18.00 seconds...

[2016-03-20 12:43:11,601: ERROR/Beat] beat: Connection error: . Trying again in 18.0 seconds...
[2016-03-20 12:43:29,314: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 20.00 seconds...

[2016-03-20 12:43:29,631: ERROR/Beat] beat: Connection error: . Trying again in 20.0 seconds...
[2016-03-20 12:43:49,342: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 22.00 seconds...

[2016-03-20 12:43:49,669: ERROR/Beat] beat: Connection error: . Trying again in 22.0 seconds...
[2016-03-20 12:44:11,378: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 24.00 seconds...

[2016-03-20 12:44:11,703: ERROR/Beat] beat: Connection error: . Trying again in 24.0 seconds...
[2016-03-20 12:44:35,407: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 26.00 seconds...

[2016-03-20 12:44:35,735: ERROR/Beat] beat: Connection error: . Trying again in 26.0 seconds...
[2016-03-20 12:45:01,467: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 28.00 seconds...

[2016-03-20 12:45:01,790: ERROR/Beat] beat: Connection error: . Trying again in 28.0 seconds...
[2016-03-20 12:45:29,500: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 30.00 seconds...

[2016-03-20 12:45:29,845: ERROR/Beat] beat: Connection error: . Trying again in 30.0 seconds...
[2016-03-20 12:45:59,537: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 32.00 seconds...

[2016-03-20 12:45:59,885: ERROR/Beat] beat: Connection error: . Trying again in 32.0 seconds...
[2016-03-20 12:46:31,582: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 32.00 seconds...

[2016-03-20 12:46:31,924: ERROR/Beat] beat: Connection error: . Trying again in 32.0 seconds...
[2016-03-20 12:47:03,624: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 32.00 seconds...

[2016-03-20 12:47:03,961: ERROR/Beat] beat: Connection error: . Trying again in 32.0 seconds...
[2016-03-20 12:47:35,671: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 32.00 seconds...

[2016-03-20 12:47:36,016: ERROR/Beat] beat: Connection error: . Trying again in 32.0 seconds...
[2016-03-20 12:48:07,717: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 32.00 seconds...

[2016-03-20 12:48:08,056: ERROR/Beat] beat: Connection error: . Trying again in 32.0 seconds...
[2016-03-20 12:48:39,756: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 32.00 seconds...

[2016-03-20 12:48:40,101: ERROR/Beat] beat: Connection error: . Trying again in 32.0 seconds...
[2016-03-20 12:49:11,794: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 32.00 seconds...

[2016-03-20 12:49:12,154: ERROR/Beat] beat: Connection error: . Trying again in 32.0 seconds...
[2016-03-20 12:49:43,839: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 32.00 seconds...

[2016-03-20 12:49:44,205: ERROR/Beat] beat: Connection error: . Trying again in 32.0 seconds...
[2016-03-20 12:50:15,881: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 32.00 seconds...

[2016-03-20 12:50:16,251: ERROR/Beat] beat: Connection error: . Trying again in 32.0 seconds...
[2016-03-20 12:50:47,920: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 32.00 seconds...

[2016-03-20 12:50:48,309: ERROR/Beat] beat: Connection error: . Trying again in 32.0 seconds...
/home/myroslav/reserv/reserv/local/lib/python2.7/site-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 12:51:04,949: WARNING/MainProcess] /home/myroslav/reserv/reserv/local/lib/python2.7/site-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 12:51:05,000: INFO/Beat] beat: Starting...
[2016-03-20 12:51:05,050: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 2.00 seconds...

[2016-03-20 12:51:05,555: ERROR/Beat] beat: Connection error: . Trying again in 2.0 seconds...
[2016-03-20 12:51:07,057: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 4.00 seconds...

[2016-03-20 12:51:07,571: ERROR/Beat] beat: Connection error: . Trying again in 4.0 seconds...
[2016-03-20 12:51:11,070: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 6.00 seconds...

[2016-03-20 12:51:11,587: ERROR/Beat] beat: Connection error: . Trying again in 6.0 seconds...
[2016-03-20 12:51:17,087: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 8.00 seconds...

[2016-03-20 12:51:17,603: ERROR/Beat] beat: Connection error: . Trying again in 8.0 seconds...
/usr/local/lib/python2.7/dist-packages/celery/platforms.py:812: RuntimeWarning: You are running the worker with superuser privileges, which is
absolutely not recommended!

Please specify a different user using the -u option.

User information: uid=0 euid=0 gid=0 egid=0

  uid=uid, euid=euid, gid=gid, egid=egid,

/usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 13:32:29,156: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 13:32:29,680: INFO/MainProcess] Connected to redis://redis:6379//
[2016-03-20 13:32:29,691: INFO/MainProcess] mingle: searching for neighbors
[2016-03-20 13:32:29,703: INFO/Beat] beat: Starting...
[2016-03-20 13:32:30,698: INFO/MainProcess] mingle: all alone
/usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 13:32:30,831: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 13:32:30,831: WARNING/MainProcess] celery@main_worker ready.
[2016-03-20 13:37:38,146: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/consumer.py", line 279, in start
    blueprint.start(self)
  File "/usr/local/lib/python2.7/dist-packages/celery/bootsteps.py", line 123, in start
    step.start(parent)
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/consumer.py", line 838, in start
    c.loop(*c.loop_args())
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/loops.py", line 76, in asynloop
    next(loop)
  File "/usr/local/lib/python2.7/dist-packages/kombu/async/hub.py", line 340, in create_loop
    cb(*cbargs)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 981, in on_readable
    item = self.cycle.on_readable(fileno)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 331, in on_readable
    return chan.handlers[type]()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 652, in _brpop_read
    self.client.connection.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 835, in disconnect
    channel._on_connection_disconnect(self)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 489, in _on_connection_disconnect
    self._disconnect_pools()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 477, in _disconnect_pools
    self._async_pool.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/redis/connection.py", line 921, in disconnect
    connection.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 835, in disconnect
    channel._on_connection_disconnect(self)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 491, in _on_connection_disconnect
    raise get_redis_ConnectionError()
ConnectionError
/usr/local/lib/python2.7/dist-packages/celery/platforms.py:812: RuntimeWarning: You are running the worker with superuser privileges, which is
absolutely not recommended!

Please specify a different user using the -u option.

User information: uid=0 euid=0 gid=0 egid=0

  uid=uid, euid=euid, gid=gid, egid=egid,

/usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 13:38:08,136: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 13:38:08,205: INFO/MainProcess] Connected to redis://redis:6379//
[2016-03-20 13:38:08,213: INFO/MainProcess] mingle: searching for neighbors
[2016-03-20 13:38:08,223: INFO/Beat] beat: Starting...
[2016-03-20 13:38:09,218: INFO/MainProcess] mingle: all alone
/usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 13:38:09,334: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 13:38:09,334: WARNING/MainProcess] celery@main_worker ready.

worker: Warm shutdown (MainProcess)
[2016-03-20 13:42:49,940: INFO/MainProcess] beat: Shutting down...
 
 -------------- celery@main_worker v3.1.20 (Cipater)
---- **** ----- 
--- * ***  * -- Linux-3.19.0-33-generic-x86_64-with-Ubuntu-14.04-trusty
-- * - **** --- 
- ** ---------- [config]
- ** ---------- .> app:         default:0x7fbea9a427d0 (djcelery.loaders.DjangoLoader)
- ** ---------- .> transport:   redis://redis:6379//
- ** ---------- .> results:     database
- *** --- * --- .> concurrency: 4 (prefork)
-- ******* ---- 
--- ***** ----- [queues]
 -------------- .> celery           exchange=celery(direct) key=celery
                

[tasks]


/usr/local/lib/python2.7/dist-packages/celery/platforms.py:812: RuntimeWarning: You are running the worker with superuser privileges, which is
absolutely not recommended!

Please specify a different user using the -u option.

User information: uid=0 euid=0 gid=0 egid=0

  uid=uid, euid=euid, gid=gid, egid=egid,

/usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 13:43:12,204: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 13:43:12,242: INFO/MainProcess] Connected to redis://redis:6379//
[2016-03-20 13:43:12,252: INFO/MainProcess] mingle: searching for neighbors
[2016-03-20 13:43:12,263: INFO/Beat] beat: Starting...
[2016-03-20 13:43:13,258: INFO/MainProcess] mingle: all alone
/usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 13:43:13,284: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 13:43:13,284: WARNING/MainProcess] celery@main_worker ready.

worker: Warm shutdown (MainProcess)
[2016-03-20 13:45:54,541: INFO/MainProcess] beat: Shutting down...
 
 -------------- celery@main_worker v3.1.20 (Cipater)
---- **** ----- 
--- * ***  * -- Linux-3.19.0-33-generic-x86_64-with-Ubuntu-14.04-trusty
-- * - **** --- 
- ** ---------- [config]
- ** ---------- .> app:         default:0x7f9169cf17d0 (djcelery.loaders.DjangoLoader)
- ** ---------- .> transport:   redis://redis:6379//
- ** ---------- .> results:     database
- *** --- * --- .> concurrency: 4 (prefork)
-- ******* ---- 
--- ***** ----- [queues]
 -------------- .> celery           exchange=celery(direct) key=celery
                

[tasks]


/usr/local/lib/python2.7/dist-packages/celery/platforms.py:812: RuntimeWarning: You are running the worker with superuser privileges, which is
absolutely not recommended!

Please specify a different user using the -u option.

User information: uid=0 euid=0 gid=0 egid=0

  uid=uid, euid=euid, gid=gid, egid=egid,

/usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 13:46:06,641: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 13:46:06,700: INFO/Beat] beat: Starting...
/usr/local/lib/python2.7/dist-packages/celery/platforms.py:812: RuntimeWarning: You are running the worker with superuser privileges, which is
absolutely not recommended!

Please specify a different user using the -u option.

User information: uid=0 euid=0 gid=0 egid=0

  uid=uid, euid=euid, gid=gid, egid=egid,

/usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 13:47:40,993: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 13:47:41,053: INFO/MainProcess] Connected to redis://redis:6379//
[2016-03-20 13:47:41,072: INFO/MainProcess] mingle: searching for neighbors
[2016-03-20 13:47:41,134: INFO/Beat] beat: Starting...
[2016-03-20 13:47:42,079: INFO/MainProcess] mingle: all alone
/usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 13:47:42,101: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 13:47:42,101: WARNING/MainProcess] celery@main_worker ready.
[2016-03-20 14:31:30,943: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/consumer.py", line 279, in start
    blueprint.start(self)
  File "/usr/local/lib/python2.7/dist-packages/celery/bootsteps.py", line 123, in start
    step.start(parent)
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/consumer.py", line 838, in start
    c.loop(*c.loop_args())
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/loops.py", line 76, in asynloop
    next(loop)
  File "/usr/local/lib/python2.7/dist-packages/kombu/async/hub.py", line 340, in create_loop
    cb(*cbargs)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 981, in on_readable
    item = self.cycle.on_readable(fileno)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 331, in on_readable
    return chan.handlers[type]()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 652, in _brpop_read
    self.client.connection.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 835, in disconnect
    channel._on_connection_disconnect(self)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 489, in _on_connection_disconnect
    self._disconnect_pools()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 477, in _disconnect_pools
    self._async_pool.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/redis/connection.py", line 921, in disconnect
    connection.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 835, in disconnect
    channel._on_connection_disconnect(self)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 491, in _on_connection_disconnect
    raise get_redis_ConnectionError()
ConnectionError
/usr/local/lib/python2.7/dist-packages/celery/platforms.py:812: RuntimeWarning: You are running the worker with superuser privileges, which is
absolutely not recommended!

Please specify a different user using the -u option.

User information: uid=0 euid=0 gid=0 egid=0

  uid=uid, euid=euid, gid=gid, egid=egid,

/usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 14:36:09,804: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 14:36:09,854: INFO/MainProcess] Connected to redis://redis:6379//
[2016-03-20 14:36:09,879: INFO/MainProcess] mingle: searching for neighbors
[2016-03-20 14:36:09,916: INFO/Beat] beat: Starting...
[2016-03-20 14:36:10,890: INFO/MainProcess] mingle: all alone
/usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 14:36:10,902: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 14:36:10,902: WARNING/MainProcess] celery@main_worker ready.

worker: Warm shutdown (MainProcess)
[2016-03-20 14:55:37,943: INFO/MainProcess] beat: Shutting down...
 
 -------------- celery@main_worker v3.1.20 (Cipater)
---- **** ----- 
--- * ***  * -- Linux-3.19.0-33-generic-x86_64-with-Ubuntu-14.04-trusty
-- * - **** --- 
- ** ---------- [config]
- ** ---------- .> app:         default:0x7f37450767d0 (djcelery.loaders.DjangoLoader)
- ** ---------- .> transport:   redis://redis:6379//
- ** ---------- .> results:     database
- *** --- * --- .> concurrency: 4 (prefork)
-- ******* ---- 
--- ***** ----- [queues]
 -------------- .> celery           exchange=celery(direct) key=celery
                

[tasks]


/usr/local/lib/python2.7/dist-packages/celery/platforms.py:812: RuntimeWarning: You are running the worker with superuser privileges, which is
absolutely not recommended!

Please specify a different user using the -u option.

User information: uid=0 euid=0 gid=0 egid=0

  uid=uid, euid=euid, gid=gid, egid=egid,

/usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 14:55:51,468: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 14:55:51,568: INFO/MainProcess] Connected to redis://redis:6379//
[2016-03-20 14:55:51,607: INFO/MainProcess] mingle: searching for neighbors
[2016-03-20 14:55:51,669: INFO/Beat] beat: Starting...
[2016-03-20 14:55:52,639: INFO/MainProcess] mingle: all alone
/usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 14:55:52,655: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 14:55:52,655: WARNING/MainProcess] celery@main_worker ready.

worker: Warm shutdown (MainProcess)
[2016-03-20 14:56:01,682: INFO/MainProcess] beat: Shutting down...
 
 -------------- celery@main_worker v3.1.20 (Cipater)
---- **** ----- 
--- * ***  * -- Linux-3.19.0-33-generic-x86_64-with-Ubuntu-14.04-trusty
-- * - **** --- 
- ** ---------- [config]
- ** ---------- .> app:         default:0x7f4904c977d0 (djcelery.loaders.DjangoLoader)
- ** ---------- .> transport:   redis://redis:6379//
- ** ---------- .> results:     database
- *** --- * --- .> concurrency: 4 (prefork)
-- ******* ---- 
--- ***** ----- [queues]
 -------------- .> celery           exchange=celery(direct) key=celery
                

[tasks]


/usr/local/lib/python2.7/dist-packages/celery/platforms.py:812: RuntimeWarning: You are running the worker with superuser privileges, which is
absolutely not recommended!

Please specify a different user using the -u option.

User information: uid=0 euid=0 gid=0 egid=0

  uid=uid, euid=euid, gid=gid, egid=egid,

/usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 14:56:24,026: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 14:56:24,066: INFO/MainProcess] Connected to redis://redis:6379//
[2016-03-20 14:56:24,075: INFO/MainProcess] mingle: searching for neighbors
[2016-03-20 14:56:24,087: INFO/Beat] beat: Starting...
[2016-03-20 14:56:25,090: INFO/MainProcess] mingle: all alone
/usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 14:56:25,114: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 14:56:25,114: WARNING/MainProcess] celery@main_worker ready.

worker: Warm shutdown (MainProcess)
[2016-03-20 14:56:58,510: INFO/MainProcess] beat: Shutting down...
 
 -------------- celery@main_worker v3.1.20 (Cipater)
---- **** ----- 
--- * ***  * -- Linux-3.19.0-33-generic-x86_64-with-Ubuntu-14.04-trusty
-- * - **** --- 
- ** ---------- [config]
- ** ---------- .> app:         default:0x7f776d8327d0 (djcelery.loaders.DjangoLoader)
- ** ---------- .> transport:   redis://redis:6379//
- ** ---------- .> results:     database
- *** --- * --- .> concurrency: 4 (prefork)
-- ******* ---- 
--- ***** ----- [queues]
 -------------- .> celery           exchange=celery(direct) key=celery
                

[tasks]


Traceback (most recent call last):
  File "/project/manage.py", line 10, in <module>
    execute_from_command_line(sys.argv)
  File "/usr/local/lib/python2.7/dist-packages/django/core/management/__init__.py", line 353, in execute_from_command_line
    utility.execute()
  File "/usr/local/lib/python2.7/dist-packages/django/core/management/__init__.py", line 302, in execute
    settings.INSTALLED_APPS
  File "/usr/local/lib/python2.7/dist-packages/django/conf/__init__.py", line 55, in __getattr__
    self._setup(name)
  File "/usr/local/lib/python2.7/dist-packages/django/conf/__init__.py", line 43, in _setup
    self._wrapped = Settings(settings_module)
  File "/usr/local/lib/python2.7/dist-packages/django/conf/__init__.py", line 99, in __init__
    mod = importlib.import_module(self.SETTINGS_MODULE)
  File "/usr/lib/python2.7/importlib/__init__.py", line 37, in import_module
    __import__(name)
  File "/project/visareserv/settings.py", line 157, in <module>
    if SERVER_ENVIRONMENT == 'PROD':
NameError: name 'SERVER_ENVIRONMENT' is not defined
Traceback (most recent call last):
  File "/project/manage.py", line 10, in <module>
    execute_from_command_line(sys.argv)
  File "/usr/local/lib/python2.7/dist-packages/django/core/management/__init__.py", line 353, in execute_from_command_line
    utility.execute()
  File "/usr/local/lib/python2.7/dist-packages/django/core/management/__init__.py", line 302, in execute
    settings.INSTALLED_APPS
  File "/usr/local/lib/python2.7/dist-packages/django/conf/__init__.py", line 55, in __getattr__
    self._setup(name)
  File "/usr/local/lib/python2.7/dist-packages/django/conf/__init__.py", line 43, in _setup
    self._wrapped = Settings(settings_module)
  File "/usr/local/lib/python2.7/dist-packages/django/conf/__init__.py", line 99, in __init__
    mod = importlib.import_module(self.SETTINGS_MODULE)
  File "/usr/lib/python2.7/importlib/__init__.py", line 37, in import_module
    __import__(name)
  File "/project/visareserv/settings.py", line 157, in <module>
    if SERVER_ENVIRONMENT == 'PROD':
NameError: name 'SERVER_ENVIRONMENT' is not defined
Traceback (most recent call last):
  File "/project/manage.py", line 10, in <module>
    execute_from_command_line(sys.argv)
  File "/usr/local/lib/python2.7/dist-packages/django/core/management/__init__.py", line 353, in execute_from_command_line
    utility.execute()
  File "/usr/local/lib/python2.7/dist-packages/django/core/management/__init__.py", line 302, in execute
    settings.INSTALLED_APPS
  File "/usr/local/lib/python2.7/dist-packages/django/conf/__init__.py", line 55, in __getattr__
    self._setup(name)
  File "/usr/local/lib/python2.7/dist-packages/django/conf/__init__.py", line 43, in _setup
    self._wrapped = Settings(settings_module)
  File "/usr/local/lib/python2.7/dist-packages/django/conf/__init__.py", line 99, in __init__
    mod = importlib.import_module(self.SETTINGS_MODULE)
  File "/usr/lib/python2.7/importlib/__init__.py", line 37, in import_module
    __import__(name)
  File "/project/visareserv/settings.py", line 157, in <module>
    if SERVER_ENVIRONMENT == 'PROD':
NameError: name 'SERVER_ENVIRONMENT' is not defined
/usr/local/lib/python2.7/dist-packages/celery/platforms.py:812: RuntimeWarning: You are running the worker with superuser privileges, which is
absolutely not recommended!

Please specify a different user using the -u option.

User information: uid=0 euid=0 gid=0 egid=0

  uid=uid, euid=euid, gid=gid, egid=egid,

/usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 14:57:12,994: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 14:57:13,077: INFO/MainProcess] Connected to redis://redis:6379//
[2016-03-20 14:57:13,105: INFO/MainProcess] mingle: searching for neighbors
[2016-03-20 14:57:13,111: INFO/Beat] beat: Starting...
[2016-03-20 14:57:14,118: INFO/MainProcess] mingle: all alone
/usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 14:57:14,137: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 14:57:14,137: WARNING/MainProcess] celery@main_worker ready.
[2016-03-20 15:09:23,428: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/consumer.py", line 279, in start
    blueprint.start(self)
  File "/usr/local/lib/python2.7/dist-packages/celery/bootsteps.py", line 123, in start
    step.start(parent)
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/consumer.py", line 838, in start
    c.loop(*c.loop_args())
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/loops.py", line 76, in asynloop
    next(loop)
  File "/usr/local/lib/python2.7/dist-packages/kombu/async/hub.py", line 340, in create_loop
    cb(*cbargs)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 981, in on_readable
    item = self.cycle.on_readable(fileno)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 331, in on_readable
    return chan.handlers[type]()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 652, in _brpop_read
    self.client.connection.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 835, in disconnect
    channel._on_connection_disconnect(self)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 489, in _on_connection_disconnect
    self._disconnect_pools()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 477, in _disconnect_pools
    self._async_pool.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/redis/connection.py", line 921, in disconnect
    connection.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 835, in disconnect
    channel._on_connection_disconnect(self)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 491, in _on_connection_disconnect
    raise get_redis_ConnectionError()
ConnectionError
/usr/local/lib/python2.7/dist-packages/celery/platforms.py:812: RuntimeWarning: You are running the worker with superuser privileges, which is
absolutely not recommended!

Please specify a different user using the -u option.

User information: uid=0 euid=0 gid=0 egid=0

  uid=uid, euid=euid, gid=gid, egid=egid,

/usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 15:10:02,969: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 15:10:03,017: INFO/MainProcess] Connected to redis://redis:6379//
[2016-03-20 15:10:03,042: INFO/MainProcess] mingle: searching for neighbors
[2016-03-20 15:10:03,068: INFO/Beat] beat: Starting...
[2016-03-20 15:10:04,050: INFO/MainProcess] mingle: all alone
/usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 15:10:04,064: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 15:10:04,064: WARNING/MainProcess] celery@main_worker ready.

worker: Warm shutdown (MainProcess)
[2016-03-20 15:14:15,980: INFO/MainProcess] beat: Shutting down...
 
 -------------- celery@main_worker v3.1.20 (Cipater)
---- **** ----- 
--- * ***  * -- Linux-3.19.0-33-generic-x86_64-with-Ubuntu-14.04-trusty
-- * - **** --- 
- ** ---------- [config]
- ** ---------- .> app:         default:0x7f153ca037d0 (djcelery.loaders.DjangoLoader)
- ** ---------- .> transport:   redis://redis:6379//
- ** ---------- .> results:     database
- *** --- * --- .> concurrency: 4 (prefork)
-- ******* ---- 
--- ***** ----- [queues]
 -------------- .> celery           exchange=celery(direct) key=celery
                

[tasks]


[2016-03-20 15:18:04,694: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 15:18:04,732: INFO/MainProcess] Connected to redis://redis:6379//
[2016-03-20 15:18:04,743: INFO/MainProcess] mingle: searching for neighbors
[2016-03-20 15:18:04,767: INFO/Beat] beat: Starting...
[2016-03-20 15:18:05,751: INFO/MainProcess] mingle: all alone
[2016-03-20 15:18:05,772: WARNING/MainProcess] celery@main_worker ready.
[2016-03-20 18:27:43,970: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/consumer.py", line 279, in start
    blueprint.start(self)
  File "/usr/local/lib/python2.7/dist-packages/celery/bootsteps.py", line 123, in start
    step.start(parent)
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/consumer.py", line 838, in start
    c.loop(*c.loop_args())
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/loops.py", line 76, in asynloop
    next(loop)
  File "/usr/local/lib/python2.7/dist-packages/kombu/async/hub.py", line 340, in create_loop
    cb(*cbargs)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 981, in on_readable
    item = self.cycle.on_readable(fileno)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 331, in on_readable
    return chan.handlers[type]()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 652, in _brpop_read
    self.client.connection.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 835, in disconnect
    channel._on_connection_disconnect(self)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 489, in _on_connection_disconnect
    self._disconnect_pools()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 477, in _disconnect_pools
    self._async_pool.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/redis/connection.py", line 921, in disconnect
    connection.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 835, in disconnect
    channel._on_connection_disconnect(self)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 491, in _on_connection_disconnect
    raise get_redis_ConnectionError()
ConnectionError
/usr/local/lib/python2.7/dist-packages/celery/platforms.py:812: RuntimeWarning: You are running the worker with superuser privileges, which is
absolutely not recommended!

Please specify a different user using the -u option.

User information: uid=0 euid=0 gid=0 egid=0

  uid=uid, euid=euid, gid=gid, egid=egid,

/usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 18:28:38,042: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 18:28:38,086: INFO/MainProcess] Connected to redis://redis:6379//
[2016-03-20 18:28:38,098: INFO/MainProcess] mingle: searching for neighbors
[2016-03-20 18:28:38,109: INFO/Beat] beat: Starting...
[2016-03-20 18:28:39,107: INFO/MainProcess] mingle: all alone
/usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 18:28:40,134: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 18:28:40,135: WARNING/MainProcess] celery@main_worker ready.

worker: Warm shutdown (MainProcess)
[2016-03-20 18:58:27,931: INFO/MainProcess] beat: Shutting down...
 
 -------------- celery@main_worker v3.1.20 (Cipater)
---- **** ----- 
--- * ***  * -- Linux-3.19.0-33-generic-x86_64-with-Ubuntu-14.04-trusty
-- * - **** --- 
- ** ---------- [config]
- ** ---------- .> app:         default:0x7f63343197d0 (djcelery.loaders.DjangoLoader)
- ** ---------- .> transport:   redis://redis:6379//
- ** ---------- .> results:     database
- *** --- * --- .> concurrency: 4 (prefork)
-- ******* ---- 
--- ***** ----- [queues]
 -------------- .> celery           exchange=celery(direct) key=celery
                

[tasks]


/usr/local/lib/python2.7/dist-packages/celery/platforms.py:812: RuntimeWarning: You are running the worker with superuser privileges, which is
absolutely not recommended!

Please specify a different user using the -u option.

User information: uid=0 euid=0 gid=0 egid=0

  uid=uid, euid=euid, gid=gid, egid=egid,

/usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 18:58:54,375: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 18:58:54,453: INFO/Beat] beat: Starting...
[2016-03-20 18:58:54,877: INFO/MainProcess] Connected to redis://redis:6379//
[2016-03-20 18:58:54,890: INFO/MainProcess] mingle: searching for neighbors
[2016-03-20 18:58:55,896: INFO/MainProcess] mingle: all alone
/usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 18:58:55,957: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 18:58:55,958: WARNING/MainProcess] celery@main_worker ready.

worker: Warm shutdown (MainProcess)
[2016-03-20 18:59:09,441: INFO/MainProcess] beat: Shutting down...
 
 -------------- celery@main_worker v3.1.20 (Cipater)
---- **** ----- 
--- * ***  * -- Linux-3.19.0-33-generic-x86_64-with-Ubuntu-14.04-trusty
-- * - **** --- 
- ** ---------- [config]
- ** ---------- .> app:         default:0x7fbef74907d0 (djcelery.loaders.DjangoLoader)
- ** ---------- .> transport:   redis://redis:6379//
- ** ---------- .> results:     database
- *** --- * --- .> concurrency: 4 (prefork)
-- ******* ---- 
--- ***** ----- [queues]
 -------------- .> celery           exchange=celery(direct) key=celery
                

[tasks]


/usr/local/lib/python2.7/dist-packages/celery/platforms.py:812: RuntimeWarning: You are running the worker with superuser privileges, which is
absolutely not recommended!

Please specify a different user using the -u option.

User information: uid=0 euid=0 gid=0 egid=0

  uid=uid, euid=euid, gid=gid, egid=egid,

/usr/local/lib/python2.7/dist-packages/celery/platforms.py:812: RuntimeWarning: You are running the worker with superuser privileges, which is
absolutely not recommended!

Please specify a different user using the -u option.

User information: uid=0 euid=0 gid=0 egid=0

  uid=uid, euid=euid, gid=gid, egid=egid,

/usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 18:59:41,909: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 18:59:41,946: INFO/MainProcess] Connected to redis://redis:6379//
[2016-03-20 18:59:41,954: INFO/MainProcess] mingle: searching for neighbors
[2016-03-20 18:59:41,966: INFO/Beat] beat: Starting...
[2016-03-20 18:59:42,960: INFO/MainProcess] mingle: all alone
/usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 18:59:42,987: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 18:59:42,987: WARNING/MainProcess] celery@main_worker ready.

worker: Warm shutdown (MainProcess)
[2016-03-20 18:59:44,041: INFO/MainProcess] beat: Shutting down...
 
 -------------- celery@main_worker v3.1.20 (Cipater)
---- **** ----- 
--- * ***  * -- Linux-3.19.0-33-generic-x86_64-with-Ubuntu-14.04-trusty
-- * - **** --- 
- ** ---------- [config]
- ** ---------- .> app:         default:0x7f9d36af57d0 (djcelery.loaders.DjangoLoader)
- ** ---------- .> transport:   redis://redis:6379//
- ** ---------- .> results:     database
- *** --- * --- .> concurrency: 4 (prefork)
-- ******* ---- 
--- ***** ----- [queues]
 -------------- .> celery           exchange=celery(direct) key=celery
                

[tasks]


/usr/local/lib/python2.7/dist-packages/celery/platforms.py:812: RuntimeWarning: You are running the worker with superuser privileges, which is
absolutely not recommended!

Please specify a different user using the -u option.

User information: uid=0 euid=0 gid=0 egid=0

  uid=uid, euid=euid, gid=gid, egid=egid,

/usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 19:00:06,561: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 19:00:06,597: INFO/MainProcess] Connected to redis://redis:6379//
[2016-03-20 19:00:06,605: INFO/MainProcess] mingle: searching for neighbors
[2016-03-20 19:00:06,617: INFO/Beat] beat: Starting...
[2016-03-20 19:00:07,611: INFO/MainProcess] mingle: all alone
/usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 19:00:07,632: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 19:00:07,632: WARNING/MainProcess] celery@main_worker ready.

worker: Warm shutdown (MainProcess)
[2016-03-20 19:00:17,565: INFO/MainProcess] beat: Shutting down...
 
 -------------- celery@main_worker v3.1.20 (Cipater)
---- **** ----- 
--- * ***  * -- Linux-3.19.0-33-generic-x86_64-with-Ubuntu-14.04-trusty
-- * - **** --- 
- ** ---------- [config]
- ** ---------- .> app:         default:0x7fceaa3bb7d0 (djcelery.loaders.DjangoLoader)
- ** ---------- .> transport:   redis://redis:6379//
- ** ---------- .> results:     database
- *** --- * --- .> concurrency: 4 (prefork)
-- ******* ---- 
--- ***** ----- [queues]
 -------------- .> celery           exchange=celery(direct) key=celery
                

[tasks]


/usr/local/lib/python2.7/dist-packages/celery/platforms.py:812: RuntimeWarning: You are running the worker with superuser privileges, which is
absolutely not recommended!

Please specify a different user using the -u option.

User information: uid=0 euid=0 gid=0 egid=0

  uid=uid, euid=euid, gid=gid, egid=egid,

/usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 19:00:32,636: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 19:00:32,671: INFO/MainProcess] Connected to redis://redis:6379//
[2016-03-20 19:00:32,678: INFO/MainProcess] mingle: searching for neighbors
[2016-03-20 19:00:32,694: INFO/Beat] beat: Starting...
[2016-03-20 19:00:33,684: INFO/MainProcess] mingle: all alone
/usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 19:00:33,705: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/djcelery/loaders.py:136: UserWarning: Using settings.DEBUG leads to a memory leak, never use this setting in production environments!
  warn('Using settings.DEBUG leads to a memory leak, never '

[2016-03-20 19:00:33,706: WARNING/MainProcess] celery@main_worker ready.
[2016-03-20 20:34:47,818: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/consumer.py", line 279, in start
    blueprint.start(self)
  File "/usr/local/lib/python2.7/dist-packages/celery/bootsteps.py", line 123, in start
    step.start(parent)
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/consumer.py", line 838, in start
    c.loop(*c.loop_args())
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/loops.py", line 76, in asynloop
    next(loop)
  File "/usr/local/lib/python2.7/dist-packages/kombu/async/hub.py", line 340, in create_loop
    cb(*cbargs)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 981, in on_readable
    item = self.cycle.on_readable(fileno)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 331, in on_readable
    return chan.handlers[type]()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 652, in _brpop_read
    self.client.connection.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 835, in disconnect
    channel._on_connection_disconnect(self)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 489, in _on_connection_disconnect
    self._disconnect_pools()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 477, in _disconnect_pools
    self._async_pool.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/redis/connection.py", line 921, in disconnect
    connection.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 835, in disconnect
    channel._on_connection_disconnect(self)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 491, in _on_connection_disconnect
    raise get_redis_ConnectionError()
ConnectionError
[2016-03-20 20:35:33,900: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 20:35:33,949: INFO/MainProcess] Connected to redis://redis:6379//
[2016-03-20 20:35:33,959: INFO/MainProcess] mingle: searching for neighbors
[2016-03-20 20:35:33,987: INFO/Beat] beat: Starting...
[2016-03-20 20:35:34,966: INFO/MainProcess] mingle: all alone
[2016-03-20 20:35:35,020: WARNING/MainProcess] celery@main_worker ready.
[2016-03-20 20:37:22,296: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/consumer.py", line 279, in start
    blueprint.start(self)
  File "/usr/local/lib/python2.7/dist-packages/celery/bootsteps.py", line 123, in start
    step.start(parent)
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/consumer.py", line 838, in start
    c.loop(*c.loop_args())
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/loops.py", line 76, in asynloop
    next(loop)
  File "/usr/local/lib/python2.7/dist-packages/kombu/async/hub.py", line 340, in create_loop
    cb(*cbargs)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 981, in on_readable
    item = self.cycle.on_readable(fileno)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 331, in on_readable
    return chan.handlers[type]()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 652, in _brpop_read
    self.client.connection.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 835, in disconnect
    channel._on_connection_disconnect(self)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 489, in _on_connection_disconnect
    self._disconnect_pools()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 477, in _disconnect_pools
    self._async_pool.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/redis/connection.py", line 921, in disconnect
    connection.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 835, in disconnect
    channel._on_connection_disconnect(self)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 491, in _on_connection_disconnect
    raise get_redis_ConnectionError()
ConnectionError
[2016-03-20 20:37:22,303: ERROR/MainProcess] Error on restarting Control: AttributeError("'NoneType' object has no attribute 'hostname'",)
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/celery/bootsteps.py", line 155, in send_all
    fun(parent, *args)
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/pidbox.py", line 55, in stop
    self.consumer = self._close_channel(c)
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/pidbox.py", line 64, in _close_channel
    ignore_errors(c, self.node.channel.close)
  File "/usr/local/lib/python2.7/dist-packages/kombu/common.py", line 282, in ignore_errors
    return fun(*args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 775, in close
    self.queue_delete(queue)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/virtual/__init__.py", line 460, in queue_delete
    self._delete(queue, exchange, *meta)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 731, in _delete
    with self.conn_or_acquire() as client:
  File "/usr/lib/python2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 872, in conn_or_acquire
    yield self._create_client()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 843, in _create_client
    return self.Client(connection_pool=self.pool)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 877, in pool
    self._pool = self._get_pool()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 846, in _get_pool
    params = self._connparams(async=async)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 806, in _connparams
    connparams = {'host': conninfo.hostname or '127.0.0.1',
AttributeError: 'NoneType' object has no attribute 'hostname'
[2016-03-20 20:37:45,264: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 20:37:45,323: INFO/Beat] beat: Starting...
[2016-03-20 20:37:45,809: INFO/MainProcess] Connected to redis://redis:6379//
[2016-03-20 20:37:45,840: INFO/MainProcess] mingle: searching for neighbors
[2016-03-20 20:37:46,853: INFO/MainProcess] mingle: all alone
[2016-03-20 20:37:46,889: WARNING/MainProcess] celery@main_worker ready.
[2016-03-20 20:38:39,684: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/consumer.py", line 279, in start
    blueprint.start(self)
  File "/usr/local/lib/python2.7/dist-packages/celery/bootsteps.py", line 123, in start
    step.start(parent)
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/consumer.py", line 838, in start
    c.loop(*c.loop_args())
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/loops.py", line 76, in asynloop
    next(loop)
  File "/usr/local/lib/python2.7/dist-packages/kombu/async/hub.py", line 340, in create_loop
    cb(*cbargs)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 981, in on_readable
    item = self.cycle.on_readable(fileno)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 331, in on_readable
    return chan.handlers[type]()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 652, in _brpop_read
    self.client.connection.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 835, in disconnect
    channel._on_connection_disconnect(self)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 489, in _on_connection_disconnect
    self._disconnect_pools()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 477, in _disconnect_pools
    self._async_pool.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/redis/connection.py", line 921, in disconnect
    connection.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 835, in disconnect
    channel._on_connection_disconnect(self)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 491, in _on_connection_disconnect
    raise get_redis_ConnectionError()
ConnectionError
[2016-03-20 20:38:39,688: ERROR/MainProcess] Error on restarting Control: AttributeError("'NoneType' object has no attribute 'hostname'",)
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/celery/bootsteps.py", line 155, in send_all
    fun(parent, *args)
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/pidbox.py", line 55, in stop
    self.consumer = self._close_channel(c)
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/pidbox.py", line 64, in _close_channel
    ignore_errors(c, self.node.channel.close)
  File "/usr/local/lib/python2.7/dist-packages/kombu/common.py", line 282, in ignore_errors
    return fun(*args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 775, in close
    self.queue_delete(queue)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/virtual/__init__.py", line 460, in queue_delete
    self._delete(queue, exchange, *meta)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 731, in _delete
    with self.conn_or_acquire() as client:
  File "/usr/lib/python2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 872, in conn_or_acquire
    yield self._create_client()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 843, in _create_client
    return self.Client(connection_pool=self.pool)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 877, in pool
    self._pool = self._get_pool()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 846, in _get_pool
    params = self._connparams(async=async)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 806, in _connparams
    connparams = {'host': conninfo.hostname or '127.0.0.1',
AttributeError: 'NoneType' object has no attribute 'hostname'
[2016-03-20 20:38:39,695: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 2.00 seconds...

[2016-03-20 20:39:02,796: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 20:39:02,888: INFO/MainProcess] Connected to redis://redis:6379//
[2016-03-20 20:39:02,917: INFO/Beat] beat: Starting...
[2016-03-20 20:39:02,923: INFO/MainProcess] mingle: searching for neighbors
[2016-03-20 20:39:03,936: INFO/MainProcess] mingle: all alone
[2016-03-20 20:39:03,959: WARNING/MainProcess] celery@main_worker ready.
[2016-03-20 20:40:05,504: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/consumer.py", line 279, in start
    blueprint.start(self)
  File "/usr/local/lib/python2.7/dist-packages/celery/bootsteps.py", line 123, in start
    step.start(parent)
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/consumer.py", line 838, in start
    c.loop(*c.loop_args())
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/loops.py", line 76, in asynloop
    next(loop)
  File "/usr/local/lib/python2.7/dist-packages/kombu/async/hub.py", line 340, in create_loop
    cb(*cbargs)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 981, in on_readable
    item = self.cycle.on_readable(fileno)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 331, in on_readable
    return chan.handlers[type]()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 652, in _brpop_read
    self.client.connection.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 835, in disconnect
    channel._on_connection_disconnect(self)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 489, in _on_connection_disconnect
    self._disconnect_pools()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 477, in _disconnect_pools
    self._async_pool.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/redis/connection.py", line 921, in disconnect
    connection.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 835, in disconnect
    channel._on_connection_disconnect(self)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 491, in _on_connection_disconnect
    raise get_redis_ConnectionError()
ConnectionError
[2016-03-20 20:40:05,509: ERROR/MainProcess] Error on restarting Control: AttributeError("'NoneType' object has no attribute 'hostname'",)
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/celery/bootsteps.py", line 155, in send_all
    fun(parent, *args)
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/pidbox.py", line 55, in stop
    self.consumer = self._close_channel(c)
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/pidbox.py", line 64, in _close_channel
    ignore_errors(c, self.node.channel.close)
  File "/usr/local/lib/python2.7/dist-packages/kombu/common.py", line 282, in ignore_errors
    return fun(*args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 775, in close
    self.queue_delete(queue)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/virtual/__init__.py", line 460, in queue_delete
    self._delete(queue, exchange, *meta)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 731, in _delete
    with self.conn_or_acquire() as client:
  File "/usr/lib/python2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 872, in conn_or_acquire
    yield self._create_client()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 843, in _create_client
    return self.Client(connection_pool=self.pool)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 877, in pool
    self._pool = self._get_pool()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 846, in _get_pool
    params = self._connparams(async=async)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 806, in _connparams
    connparams = {'host': conninfo.hostname or '127.0.0.1',
AttributeError: 'NoneType' object has no attribute 'hostname'
[2016-03-20 20:40:05,516: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 2.00 seconds...

[2016-03-20 20:40:29,909: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 20:40:29,984: INFO/MainProcess] Connected to redis://redis:6379//
[2016-03-20 20:40:29,999: INFO/Beat] beat: Starting...
[2016-03-20 20:40:30,029: INFO/MainProcess] mingle: searching for neighbors
[2016-03-20 20:40:31,042: INFO/MainProcess] mingle: all alone
[2016-03-20 20:40:31,234: WARNING/MainProcess] celery@main_worker ready.
[2016-03-20 21:16:26,635: WARNING/MainProcess] consumer: Connection to broker lost. Trying to re-establish the connection...
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/consumer.py", line 279, in start
    blueprint.start(self)
  File "/usr/local/lib/python2.7/dist-packages/celery/bootsteps.py", line 123, in start
    step.start(parent)
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/consumer.py", line 838, in start
    c.loop(*c.loop_args())
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/loops.py", line 76, in asynloop
    next(loop)
  File "/usr/local/lib/python2.7/dist-packages/kombu/async/hub.py", line 340, in create_loop
    cb(*cbargs)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 981, in on_readable
    item = self.cycle.on_readable(fileno)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 331, in on_readable
    return chan.handlers[type]()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 652, in _brpop_read
    self.client.connection.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 835, in disconnect
    channel._on_connection_disconnect(self)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 489, in _on_connection_disconnect
    self._disconnect_pools()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 477, in _disconnect_pools
    self._async_pool.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/redis/connection.py", line 921, in disconnect
    connection.disconnect()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 835, in disconnect
    channel._on_connection_disconnect(self)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 491, in _on_connection_disconnect
    raise get_redis_ConnectionError()
ConnectionError
[2016-03-20 21:16:26,641: ERROR/MainProcess] Error on restarting Control: AttributeError("'NoneType' object has no attribute 'hostname'",)
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/celery/bootsteps.py", line 155, in send_all
    fun(parent, *args)
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/pidbox.py", line 55, in stop
    self.consumer = self._close_channel(c)
  File "/usr/local/lib/python2.7/dist-packages/celery/worker/pidbox.py", line 64, in _close_channel
    ignore_errors(c, self.node.channel.close)
  File "/usr/local/lib/python2.7/dist-packages/kombu/common.py", line 282, in ignore_errors
    return fun(*args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 775, in close
    self.queue_delete(queue)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/virtual/__init__.py", line 460, in queue_delete
    self._delete(queue, exchange, *meta)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 731, in _delete
    with self.conn_or_acquire() as client:
  File "/usr/lib/python2.7/contextlib.py", line 17, in __enter__
    return self.gen.next()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 872, in conn_or_acquire
    yield self._create_client()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 843, in _create_client
    return self.Client(connection_pool=self.pool)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 877, in pool
    self._pool = self._get_pool()
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 846, in _get_pool
    params = self._connparams(async=async)
  File "/usr/local/lib/python2.7/dist-packages/kombu/transport/redis.py", line 806, in _connparams
    connparams = {'host': conninfo.hostname or '127.0.0.1',
AttributeError: 'NoneType' object has no attribute 'hostname'
[2016-03-20 21:16:26,658: ERROR/MainProcess] consumer: Cannot connect to redis://redis:6379//: .
Trying again in 2.00 seconds...

[2016-03-20 21:16:53,584: WARNING/MainProcess] /usr/local/lib/python2.7/dist-packages/celery/apps/worker.py:162: CDeprecationWarning: 
Starting from version 3.2 Celery will refuse to accept pickle by default.

The pickle serializer is a security concern as it may give attackers
the ability to execute any command.  It's important to secure
your broker from unauthorized access when using pickle, so we think
that enabling pickle should require a deliberate action and not be
the default choice.

If you depend on pickle then you should set a setting to disable this
warning and to be sure that everything will continue working
when you upgrade to Celery 3.2::

    CELERY_ACCEPT_CONTENT = ['pickle', 'json', 'msgpack', 'yaml']

You must only enable the serializers that you will actually use.


  warnings.warn(CDeprecationWarning(W_PICKLE_DEPRECATED))

[2016-03-20 21:16:53,680: INFO/MainProcess] Connected to redis://redis:6379//
[2016-03-20 21:16:53,699: INFO/MainProcess] mingle: searching for neighbors
[2016-03-20 21:16:53,728: INFO/Beat] beat: Starting...
[2016-03-20 21:16:54,706: INFO/MainProcess] mingle: all alone
[2016-03-20 21:16:54,721: WARNING/MainProcess] celery@main_worker ready.
